# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.1'

    - name: Install Dependencies
      run: go mod tidy
      working-directory: ./go-pci-dss

    - name: Build
      run: go build -v ./...
      working-directory: ./go-pci-dss

    - name: Test
      run: go test -v ./...

    #- name: Install golangci-lint
    #  run: |
    #    curl -sSfL https://github.com/golangci/golangci-lint/releases/download/v1.54.0/golangci-lint-1.54.0-linux-amd64.tar.gz | tar -xvzf - -C /tmp
    #    sudo mv /tmp/golangci-lint-1.54.0-linux-amd64/golangci-lint /usr/local/bin/
    #  working-directory: ./go-pci-dss

    #- name: Lint Code
    #  run: golangci-lint run --timeout 5m
    #  working-directory: ./go-pci-dss

    #- name: Security Check
    #  run: |
    #    go install github.com/securego/gosec/v2/cmd/gosec@latest
    #    gosec ./...  
    #  working-directory: ./go-pci-dss  # (ako je potrebno za tvoj projekat)


    #- name: Check Code Coverage
    #  run: |
    #    go test -coverprofile=coverage.out ./...
    #    go tool cover -func=coverage.out
    #  working-directory: ./go-pci-dss

